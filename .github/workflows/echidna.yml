name: echidna

on:
  workflow_dispatch:

jobs:
  echidna:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        testName:
          - SystemEchidnaTest
        os:
          - ubuntu-latest
        node_version:
          - 19
        python_version:
          - 3.8

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Python ${{ matrix.python_version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python_version }}

      - name: Install Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v2

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install dependencies
        run: |
          make install
          pip3 install crytic-compile
          pip3 install solc-select

      - name: Configure Solc
        run: |
          solc-select install 0.8.17
          solc-select use 0.8.17

      - name: Run Forge build
        run: |
          forge --version
          make build

      - name: Run Crytic compile ${{ matrix.testName }}
        run: |
          crytic-compile echidna/${{ matrix.testName }}.e.sol --solc-args "--optimize --optimize-runs 200" --export-format solc
          jq --sort-keys . crytic-export/combined_solc.json > sorted_crytic_solc.json

      - name: Cache ${{ matrix.testName }} Corpus
        uses: actions/cache@v2
        with:
          path: corpus
          key: abi-${{ matrix.testName }}-${{ hashFiles('**/sorted_crytic_solc.json') }}-v3

      - name: Fuzz ${{ matrix.testName }}
        uses: crytic/echidna-action@v2
        with:
          files: echidna/${{ matrix.testName }}.e.sol
          contract: ${{ matrix.testName }}
          corpus-dir: corpus
          test-mode: assertion
          test-limit: 50000
          seq-len: 100
          solc-args: --optimize --optimize-runs 200
          solc-version: 0.8.17
          echidna-version: v2.0.4

      - name: Upload ${{ matrix.testName }} coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage-${{ matrix.testName }}
          path: corpus/covered.*
