name: echidna

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - development
  pull_request:
    branches:
      - master
      - development

jobs:
  echidna:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        testName:
          - BaseModule

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          pip3 install crytic-compile
          pip3 install solc-select

      - name: Select solc version
        run: |
          solc-select install 0.8.17
          solc-select use 0.8.17

      - name: Crytic Compile ${{ matrix.testName }}
        run: |
          crytic-compile echidna/${{ matrix.testName }}.e.sol --solc-args "--optimize --optimize-runs 200" --export-format solc
          jq --sort-keys . crytic-export/combined_solc.json > sorted_crytic_solc.json

      - name: Cache ${{ matrix.testName }} Corpus
        uses: actions/cache@v2
        with:
          path: corpus
          key: abi-${{ matrix.testName }}-${{ hashFiles('**/sorted_crytic_solc.json') }}-v3

      - name: Fuzz ${{ matrix.testName }}
        uses: crytic/echidna-action@v2
        with:
          files: echidna/${{ matrix.testName }}.e.sol
          contract: ${{ matrix.testName }}
          config: echidna.config.ci.yml
          corpus-dir: corpus
          test-mode: assertion
          test-limit: 250000
          seq-len: 100
          solc-args: --optimize --optimize-runs 200
          solc-version: 0.8.17
          echidna-version: v2.0.0

      - name: Upload ${{ matrix.testName }} Coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage-${{ matrix.testName }}
          path: corpus/covered.*
